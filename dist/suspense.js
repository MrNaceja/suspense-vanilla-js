(()=>{"use strict";const e=(e,n)=>{let t=!1;return n.some((n=>{e instanceof Array?e.some((e=>t&&=e instanceof n)):t=e instanceof n})),Boolean(t)};window.Suspense=({container:n,fallback:t,lazyElement:s,replace:r=!1,onSuspensionStart:o,onSuspensionEnd:a,target:l})=>{if(!e(s,[Promise,Function]))throw new TypeError("lazyElement should be promise return element(s) or async function returning element(s).");return n||(n=document.createElement("slot")),o&&o(),n.classList.add("suspense"),n.replaceChildren([]),n.append(t),l&&!l.contains(n)&&l.append(n),s instanceof Function&&(s=s()),s.then((s=>{if(!e(s,[Element,Node]))throw new TypeError("lazyElement should return DOM Elements (Element or Node).");s instanceof Array||(s=[s]),t.replaceWith(...s),r&&n.replaceWith(...n.childNodes),n.classList.remove("suspense"),a&&a()})),n}})();